<!doctype html>
<html lang="en">
<head>
{%- capture fullTitle %}{{ pageTitle }} | {{ site.name }}{% endcapture %}
    <title>{{ fullTitle | trimString: 65 }}</title>
    <meta name="viewport" content="width=device-width" />

    <meta charset="UTF-8" />
    <meta name="description" content="{{ description | trimString: 155 }}" />
    <meta name="keywords" content="{{ tags | arrayToString }}" />
    <meta name="author" content="{{ site.author }}" />
    
    <!-- openGraph -->
    <meta property="og:site_name" content="{{ site.name }}" />
    <meta property="og:title" content="{{ fullTitle | trimString: 35 }}" />
    <meta property="og:url" content="{{ url }}" />
    <meta property="og:description" content="{{ description | trimString: 65 }}" />
    <meta property="og:image" content="{{ coverImage }}" />
    <meta property="og:image:type" content="image/jpeg" />
    <meta property="og:image:alt" content="{{ pageTitle | trimString: 65}}" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:type" content="article" />
{%- if coverVideo != undefined %}
    <meta property="og:video" content="{{ coverVideo }}" />
    <meta property="og:video:height" content="{{ coverVideoHeight }}" />
    <meta property="og:video:width" content="{{ coverVideoWidth }}" />
{% endif %}

{%- capture unchachedFavicon %}{{ site.favicon }}?cache={{ "now" | date: "%Y%m%d%H%M" }}{% endcapture %}
    <link rel="shortcut icon" href="{{unchachedFavicon}}"  type="image/svg+xml" sizes="any" />
    <link rel="mask-icon" href="{{ unchachedFavicon }}" color="#000000" />
    <meta name="theme-color" content="#ffffff" />
    <link rel="apple-touch-icon" href="{{unchachedFavicon}}" />

    <link rel="canonical" href="{{ site.canonicalBase }}{{ page.url }}"/>
    <link rel="preload" href="/css/fonts/lmroman10-regular-webfont.woff2" as="font" type="font/woff2" />

    <link rel="stylesheet" type="text/css" href="/css/main.css" />
    <link rel="stylesheet" type="text/css" href="/css/articlelist.css" />
    <link rel="stylesheet" type="text/css" href="/css/articlepost.css" />
    <link rel="stylesheet" type="text/css" href="/css/components/header.css" />

<style>
#pageTitle {
    font-size: 2em;
}
.titleSection {
    min-height: 500px;
    position: relative;
}
.infoblock {
    /* position: absolute; */
    bottom: 0;
    padding-top: 0;
    padding-bottom: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* *********** */
header .currentIndex {
    padding: 1em;
    box-sizing: border-box;
    flex-grow: 1;
    max-width: 50%;
}
header.expanded .currentIndex {
    display: none;
}

aside .expandIndex {
    float: right;
    margin-top: 6px;
}
.tableofcontents {
    width:100%;
}

.relatedPosts article {
    margin-top: 1em;
    position: relative;
    display: flex;
    flex-direction: row;
}
.relatedPosts article > div {
    box-sizing: border-box;
    padding: 1em;
    transition: .4s transform;
}
.relatedPosts article h4 {
    margin: 0;
}
.relatedPosts article p {
    margin: 0;
}
.relatedPosts article > a {
    flex-shrink: 0;
    align-self: center;
    height: 64px;
    width: 64px;
    position: relative;
    margin-left: 1em;
}
/* .relatedPosts article picture {} */
.relatedPosts article picture img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
.relatedPosts article::before {
    content: ">";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    transition: .7s opacity;
    opacity: 0;
}
.relatedPosts article:hover::before {
    opacity: 1;
}
.relatedPosts article:hover div {
    transform: translateX(1em);
}

@media only screen and (min-width: 650px) {
    .currentIndex {
        display: none;
    }
    .relatedPosts article > a {
        margin-left: 2em;
    }
}
/* ***************** */
@media only screen and (max-width: 400px) {
    header > .hero {
        font-size: .7em;
    }
}

/* **************** */

article.mainPost {
    --indexpane-width: 50px;
    position: relative;
    overflow: visible;
    padding-left: var(--indexpane-width);
    box-sizing: border-box;
}
.indexPane {
    position: absolute;
    width: var(--indexpane-width);
    height: 100%;
    top: 0;
    left: -15px;
}
.indexPane > .stickContainer {
    position: sticky;
    top: 115px;
    margin-top: 1.5em;
    max-height: 300px;
    height: calc(100% - 30px);
    width: 100%;
    overflow: hidden; /* if placed on parent, sticky breaks */
}
.indexPane > .stickContainer > h3[id] {
    /* Rotate from top left corner (not default) */
    opacity: .2;
    position: absolute;
    top: 0;
    left: var(--indexpane-width);
    transform-origin: 0 0;
    transform: rotate(90deg);
    padding: 0;
    margin: 0;
    display: flex;
    vertical-align: middle;
    align-items: center;
    width: 300px;
    height: var(--indexpane-width);
    text-overflow: ellipsis;
    text-transform: uppercase;

    line-height: 95%;
}
@media only screen and (max-width: 650px) {
    article.mainPost {
        --indexpane-width: 0px;
    }
    .indexPane {
        display: none;
    }
}
.tableofcontents {
    padding-left: 50px !important; /* So the 450px readerblock media query doesn't collapse it */
    box-sizing: border-box;
    margin-left: -50px;
}
.tableofcontents h2 {
    position: absolute;
    width: 50%;
    left: 50px;
    top: 4px;
    transform-origin: 0 0;
    transform: rotate(90deg);
    text-transform: uppercase;

    margin-left: .17em;
}
.tableofcontents .toc {
    min-height: 100px; /* Prevent title overflow with small toc */
}

/* Cleaner header */
header:not(.expanded) ul li a:not(:hover), header button:not(:hover, :active) {
    opacity: .5;
    transition: .7s opacity;
}
header.titleScrolled ul li a, header.titleScrolled button {
    opacity: 1!important;
}
</style>
</head>
<body>
    <header class="dark isfirst sticking">
        <div class="hero">
            <h1><a class="hiddenlink" href="/" style="padding: 0;">{{ site.name }}</a></h1> 
            <h2>{{ site.subTitle }}</h2>
        </div>

        <div class="currentIndex">
            <h3 id="readingIndex" class="trimLines" style="--max-lines: 4;"></h3>
            <!-- And some shitcode for your pleasure with a very very very long section name -->
        </div>

        <!-- main header title etc -->
        <ul class="viewport">
            <li><a class="stealth" href="/">Journal</a></li>
            <li><a class="stealth" href="/">Projects</a></li>
            <!-- <li><a href="#">Open Source</a></li> -->
            <li><a class="stealth" href="/">Curriculum Vitae</a></li>
            <li><a class="stealth" href="/">Contact</a></li>
        </ul>
        
        <button class="expand" id="expandHeader"><i class="screenreaderAssist">Expand header</i></button>
    </header>

    <section class="fullpage center dark titleSection">
        <div class="viewport">
            <h1 id="pageTitle">{{ pageTitle }}
{%- assign visibleTags = tags | filterTags %}
{%- for mtag in visibleTags %}
                <a href="/" class="tag" title="View posts tagged with '{{ mtag }}'">{{ mtag }}</a>
{%- endfor %}
            </h1>
        </div>
            <div class="viewport infoblock">
            <span></span>
            <!--<h2>Index: <button class="expandIndex">expand</button></h2>-->

            <b>{{ page.date | date: "%Y-%m-%d" }}</b>
        </div>
    </section>

    <section class="light center">
        <aside class="tableofcontents readingIndexClear readerblock">
            <!--<h2>Index <button class="expandIndex">expand</button></h2>-->
            <h2>Index</h2>
            {{ content | toc }}
        </aside>

        <article class="readerblock mainPost">
            <hr/>
            <aside class="indexPane">
                <div class="stickContainer">
                    <h3 id="readingIndexDesktop">intro</h3>
                </div>
            </aside>
            {{ content }}
        </article>

        <div class="readerblock">
            <hr/>
            <div class style="text-align: center;">
                <a href="/">Consult other journal entries</a> for more content.
            </div>
            <div class="relatedPosts readingIndexClear">
                <h3>Related posts:</h3>

{% for x in (1..3) %}
                <article>
                    <div>
                        <h4><a href="/" class="hiddenlink">Related post 1</a></h4>
                        <p class="trimLines" style="--max-lines: 3;">Quick and simple description of a nonexistant project, because this website is unfinished TODO
                        <!-- <br/><a href="/">View post</a> -->
                        </p>
                    </div>
                    <a href="" class="hiddenlink">{% image 'img/stallman1.jpg', "related post image" %}</a>
                </article>
{% endfor %}
            </div>
        </div>
    </section>

    <footer class="dark center">
        <p style="text-align: center;"><a class="hiddenlink" href="/">Gonzalo Ruiz,</a> independent software consultant and Lighting Designer.</p>
        <p><a href="/contact">Let's have a chat!</a></p>
    </footer>
<script src="/js/main.js" type="text/javascript"></script>
<script src="/js/components/header.js" type="text/javascript"></script>
<script>
for (let elem of document.getElementsByClassName('header-anchor')) {
    detectScroll(elem.parentNode, (e) => {
        document.getElementById('readingIndex').innerHTML = (e.target.childNodes ? e.target.childNodes[0].textContent : '')
        document.getElementById('readingIndexDesktop').innerHTML = (e.target.childNodes ? e.target.childNodes[0].textContent : '')
    })
}
detectScroll(document.querySelector('.readingIndexClear'), (e) => {
    document.getElementById('readingIndex').innerHTML = ''
    document.getElementById('readingIndexDesktop').innerHTML = 'intro'
})

// Header items get the classed titlescrolled if the title has been scrolled past
detectScroll(document.querySelector('#pageTitle'), (e) => {
    document.getElementsByTagName('header')[0].classList.toggle('titleScrolled')
})

// Ensure it's normal while reading the article, in case some scroll wasn't triggered
detectScroll(document.querySelector('.tableofcontents'), (e) => {
    document.getElementsByTagName('header')[0].classList.add('titleScrolled')
})

</script>
</body>
</html>
