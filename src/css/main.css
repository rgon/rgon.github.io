@font-face {
    font-family: 'LMRoman10';
    font-style: normal;
    font-weight: 400;
    src: url('/css/fonts/lmroman10-regular-webfont.woff2') format('woff');
    /* url('fonts/lmroman10-regular-webfont.woff') format('woff'); */
    /* local('LMRoman10'), */
    font-display: swap;
}
.screenreaderAssist {
    visibility: hidden;
    position: absolute;
    height: 0;
    width: 0;
}
html {
    --bg-dark: #030303;
    --bg-light: #d0d0d0;

    --text-dark: #a0a0a0;
    --text-light: black; /* TODO */

    --selection-color: #aaa08d;
    font-family: 'LMRoman10', sans-serif;
}
.dark {
    color: var(--text-dark);
    --text-color: var(--text-dark);
    --bg-color: var(--bg-dark);
}
.light {
    color: var(--text-light);
    --text-color: var(--text-light);
    --bg-color: var(--bg-light);
}

section.light {
    background-color: var(--bg-light);
}
section.dark {
    background-color: var(--bg-dark);
}

.dark h1 {
    color: #d0d0d0;
}
.light h1 {
    color: black; /* TODO */
}

::selection {
    background: var(--selection-color);
    color: var(--text-light);
}
img::selection {
    background: transparent;
}

a {
    font-family: 'LMRoman10', sans-serif;
    text-decoration: none;
    box-sizing: content-box;
    border-bottom: 1px dotted;
    color: #a0a0a0;
    border-color: #a0a0a0;
    padding: .1em;
}
.light a {
    color: black; /* TODO */
    border-color: black;
}
a.stealth, a.hiddenlink {
    border-color: transparent;
    border-bottom-style: solid;
}
a:not(.hiddenlink):hover {
    border-color: #a0a0a0;
    border-bottom-style: solid;
}
.light a:not(.hiddenlink):hover {
    border-color: black; /* TODO */
    border-bottom-style: solid;
}

/* Page overrides */
head, body {
    margin: 0;
    /* min-height: 100vh; */
    box-sizing: border-box;
}
body {
    /* padding: 2em; */
    background: var(--bg-dark);
}
.center {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
/*
h1 {
    font-size: 3em;
    margin-top: .5em;
    margin-bottom: 0;
}
h2 {
    margin-top: 0;
    font-size: 1.57em;
}
h3 {
    margin-top: 0;
    font-size: 1.45em;
    margin-bottom: 0;
}
*/
hr {
    border-style: dashed;
    max-width: 100px;
    width: 33%;
}
hr::after, hr::before {
    content: "";
    border-bottom: 1px dashed var(--text-color);
    left: 0;
    right: calc(50% + 100px);
    position: absolute;
    opacity: .3;
}
hr::before {
    right: 0;
    left: calc(50% + 100px);
}

button {
    display: inline-block;
    vertical-align: 2px;
    padding: .2em .7em;

    flex-shrink: 0;
    flex-grow: 0;
    border: 1px solid var(--text-color);
    border-radius: 1px;
    justify-content: center;
    align-items: center;
    
    cursor: pointer;
    
    color: unset;
    background: none;
    font-family: unset;
    margin: unset;
}
button:hover {
    background-color: rgba(100,100,100, 0.3);
}

.viewport {
    width: 100%;
    max-width: 1000px;
    padding: 2em;
    position: relative;
    box-sizing: border-box;
}
@media only screen and (max-width: 450px) {
    section .viewport, ul.viewport {
        padding-left: 0;
        padding-right: 0;
    }
    section .readerblock {
        padding-left: 0;
        padding-right: 0;
    }
}
.readerblock {
    width: 100%;
    max-width: 800px;
    position: relative;
}
@media only screen and (min-width: 1400px) {
    .viewport {
        max-width: 1200px;
    }
}
.fullpage {
    min-height: 100vh;
}

section {
    padding: 2em;
    box-sizing: border-box;
}

footer {
    min-height: 200px;
    padding: 2em;
    box-sizing: border-box;
}

.horizontalflex {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    width: 100%;

    flex-wrap: wrap-reverse;
    overflow: hidden;
}

/* ************** */
.socialLinks {
    justify-content: flex-start;
}
.socialLinks > a {
    margin-right: 2em;
    vertical-align: 0px;
}
.socialLinks > a > img {
    vertical-align: -.8em;
    filter: invert(1);
    opacity: 0.75;
    height: 35px;
    margin-right: 10px;
}
.socialLinks a:hover {
    border-color: transparent;
    border-bottom-color: transparent;
    text-decoration: underline;
}

/* ********************** */
/* CSS-Based max text lines for element 
USAGE: <elem class="trimLines" style="--max-lines: 4;">
NOTE: Only works with a SINGLE paragraph or all inline elements! Not for multiple paragraphs.
*/
.trimLines {
    font-size: 1rem;
    margin: 0;
    padding: 0;
    --lh: 1rem;
    line-height: var(--lh);
    --max-lines: 4;
    max-height: calc(var(--lh) * var(--max-lines));
    overflow: hidden;
    position: relative;
}
.trimLines::before {
    /* Pure css multiline clamp! */
    content: "...";
    text-align: left;
    box-sizing: border-box;
    padding-left: 1.5em;
    position: absolute;
    top: calc(var(--lh) * calc(var(--max-lines) - 1));
    right: 0;
    width: 5em;
    height: var(--lh);
    display: inline-block;
    background: linear-gradient(to right, transparent, var(--bg-color) 30%);
}
.trimLines::after { /* Cover ellipsis if line not cut, since we cannot display: float and bottom. */
    content: "";
    text-align: left;
    box-sizing: border-box;
    width: 5em;
    height: var(--lh);
    position: relative;
    float: right;
    z-index: 3;
    background-color: var(--bg-color);
}
.trimLines.criticalHeight::after {
    /*
    For vertically aligned or other items with critical height. The height of the ellipisis won't be computed.
    Example:
        dummy strintg hello yt world
        on a trimmeng        ... <--------- dots at end
    */
    position: absolute;
}